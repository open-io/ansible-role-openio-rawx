# roles/rawx/tasks/main.yml
---
- name: "Include {{ ansible_distribution }} variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags:
    - install
    - configure

- name: "Include {{ ansible_distribution }} tasks"
  include_tasks: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
  tags: install

- name: Set properties
  set_fact:
    _rawx:
      volume: "{{ item.1.volume }}"  # mandatory
      name: "{{ openio_rawx_type }}-{{ item.1.id | default(item.0) }}"  # calculated
      id: "{{ item.1.id | default(item.0) }}"  # mandatory
      port: "{{ item.1.port }}"  # mandatory
      state: "{{ item.1.state | d('present') }}"
  with_indexed_items: "{{ openio_rawx_instances }}"
  register: _rawx_properties
  tags:
    - install
    - configure

- block:
    - name: Ensure namespace directories exist
      file:
        path: "{{ item }}"
        state: directory
        owner: openio
        group: openio
        mode: "0755"
      with_items:
        - "/var/lib/oio/sds/{{ openio_rawx_namespace }}/coredump"
        - "{{ openio_rawx_pid_directory }}"
        - "/etc/oio/sds/{{ openio_rawx_namespace }}/watch"

    - name: Ensure pid directory is persistant
      lineinfile:
        dest: /etc/tmpfiles.d/rawx.conf
        create: true
        line: "d {{ openio_rawx_pid_directory }} 755 openio openio -"
        owner: openio
        group: openio
        mode: 0644
      when: openio_rawx_pid_directory.split(' ')[0] | dirname is match("/run/.*")

  tags: configure

- name: "Include tasks for rawx state"
  include_tasks: "{{ rx.ansible_facts._rawx.state }}.yml"
  tags:
    - install
    - configure
  with_items: "{{ _rawx_properties.results }}"
  loop_control:
    loop_var: rx

- name: "Reload gridinit to apply the new configuration"
  shell: gridinit_cmd reload
  tags: configure
  when:
    - not openio_rawx_provision_only
    - need_reload | default(false)

- name: "restart rawx to apply the new configuration"
  command: "gridinit_cmd restart  {{ openio_rawx_namespace }}-{{ item.ansible_facts._rawx.name }}"
  tags: configure
  with_items: "{{ _rawx_properties.results }}"
  when:
    - item.ansible_facts._rawx.state == "present"
    - _rawx_conf is changed
    - not openio_rawx_provision_only

- block:
    - name: "Ensure rawx is started"
      command: "gridinit_cmd start {{ openio_rawx_namespace }}-{{ item.ansible_facts._rawx.name }}"
      register: _start_rawx
      changed_when: '"Success" in _start_rawx.stdout'
      when: item.ansible_facts._rawx.state == "present"
      with_items: "{{ _rawx_properties.results }}"

    - name: check rawx
      uri:
        url: "http://{{ openio_rawx_bind_address }}:{{ item.ansible_facts._rawx.port }}/info"
        return_content: true
        status_code: 200
      register: _rawx_check
      retries: 15
      delay: 1
      until: _rawx_check is success
      changed_when: false
      with_items: "{{ _rawx_properties.results }}"
      when: item.ansible_facts._rawx.state == "present"
  tags: configure
  when:
    - not openio_rawx_provision_only
    - openio_bootstrap | d(false)
...
